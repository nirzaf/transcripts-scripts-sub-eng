1
00:00:00,890 --> 00:00:02,000
Hey, guys, welcome back.

2
00:00:02,030 --> 00:00:05,760
So we're at the second check in check point for our project.

3
00:00:05,780 --> 00:00:11,960
So after each module, we'll just review what we've done and then go ahead and update our repository

4
00:00:11,960 --> 00:00:12,550
accordingly.

5
00:00:12,560 --> 00:00:18,710
So it's always good to keep the Collins off your, you know, small wins so that if your code gets corrected

6
00:00:18,710 --> 00:00:24,860
later on, you can always revert to the most recent working version of your application.

7
00:00:25,430 --> 00:00:34,340
So firstly, we can always know the changes that have been made by looking at the files already means

8
00:00:34,340 --> 00:00:34,910
it was there.

9
00:00:34,910 --> 00:00:38,030
And it is no different from the last thing that was checked in.

10
00:00:38,240 --> 00:00:41,760
And the processing means that it has been added since the last chicken.

11
00:00:41,780 --> 00:00:48,890
So it is always keeping track of what the file looked like and letting you know that it's no different

12
00:00:49,100 --> 00:00:54,280
through old or ADIC or letting you know that this has been added since the last time.

13
00:00:54,920 --> 00:01:00,820
If you want to see what has changed, you can actually right click go to it and you can see if history

14
00:01:00,830 --> 00:01:01,690
or compare.

15
00:01:01,700 --> 00:01:09,560
So when you do compare it to say, well, the last version I had is to the left, I'm just getting my

16
00:01:09,560 --> 00:01:10,220
bearings right.

17
00:01:10,220 --> 00:01:14,590
So the version I had is to the left and the new version is to the right.

18
00:01:14,600 --> 00:01:18,280
So literally that this line was modified in that way.

19
00:01:18,590 --> 00:01:22,360
And everywhere you see a green highlighted, it means that something happened.

20
00:01:22,610 --> 00:01:28,040
So when working in a team setting, though, it's always recommended that you guys don't work on the

21
00:01:28,040 --> 00:01:34,670
same files to check in, because then if you modify something on your side and modify that same file

22
00:01:34,670 --> 00:01:41,180
on my side, then we end up with this clashing kind of like this crushing situation where we'll say,

23
00:01:41,180 --> 00:01:44,180
well, the two lines are seeing two entirely different things.

24
00:01:44,180 --> 00:01:46,250
Which one should I use at that point?

25
00:01:46,250 --> 00:01:48,710
You have to manage what you call conflicts.

26
00:01:48,860 --> 00:01:51,890
I'm coding by myself, so I can't really see any conflicts right now.

27
00:01:52,460 --> 00:01:55,890
But hopefully you guys don't encounter that.

28
00:01:56,660 --> 00:01:59,720
So what we're going to do is check in.

29
00:01:59,720 --> 00:02:01,850
So to do that, I can right.

30
00:02:01,850 --> 00:02:03,650
Click go to get.

31
00:02:03,650 --> 00:02:06,290
No, that is incorrect to get changes.

32
00:02:06,590 --> 00:02:07,210
There we go.

33
00:02:07,220 --> 00:02:12,470
So new version of Visual Studio is a different level to just go with the get changes once again.

34
00:02:12,470 --> 00:02:18,410
If you're not seeing that, you can always click view and you will be able to see that menu item accordingly.

35
00:02:18,770 --> 00:02:22,160
So you always want to put in a message that depicts what was.

36
00:02:22,670 --> 00:02:29,850
So my message is the mean telling whoever would see the second at a database of some upper unit for

37
00:02:29,900 --> 00:02:33,140
I need you so you don't need to be you don't need to write an essay.

38
00:02:33,470 --> 00:02:38,000
But at least let me have an idea or however have an idea of what you've done.

39
00:02:38,330 --> 00:02:40,100
After that, we can click that.

40
00:02:40,100 --> 00:02:40,760
Correct.

41
00:02:41,030 --> 00:02:43,970
And then we see it all on the scene.

42
00:02:43,970 --> 00:02:51,020
So it will commit the changes one and two to see if just wait and see if you will commit the changes

43
00:02:51,020 --> 00:02:54,770
locally and then it will kind of synchronize with GitHub.

44
00:02:55,130 --> 00:03:00,800
And at that point, if there are changes waiting on the other side, meaning your team member made some

45
00:03:00,800 --> 00:03:03,890
changes and check them in before.

46
00:03:04,220 --> 00:03:08,900
When you say come, it's all and think it will push up your changes, get the latest ones.

47
00:03:08,900 --> 00:03:14,900
And once again, if you do modify the same file with different content, that's where that conflict

48
00:03:15,050 --> 00:03:16,100
might come up.

49
00:03:16,100 --> 00:03:19,760
So if you don't do that, then this is a really seamless process.

50
00:03:20,000 --> 00:03:26,660
So here, we'll let you know that it was successfully synchronized and you can move along to the next

51
00:03:26,810 --> 00:03:27,410
task.
